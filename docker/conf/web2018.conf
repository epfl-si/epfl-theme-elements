log_format  custom  '$request_time $remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

server {
  listen 8080;

  access_log  /dev/stdout  custom;
  error_log   /dev/stderr  error;

  # Hide nginx version information.
  server_tokens off;

  # Path for bootstrap files
  root /var/www/vhosts/web2018.epfl.ch;

  # Specify a charset
  charset utf-8;

  # Make sure no cookies are sent by the server
  fastcgi_hide_header Set-Cookie;

  # Prevent clients from accessing hidden files (starting with a dot)
  # This is particularly important if you store .htpasswd files in the site hierarchy
  location ~* (?:^|/)\. {
    deny all;
  }

  # Prevent clients from accessing to backup/config/source files
  location ~* (?:\.(?:bak|config|sql|fla|psd|ini|log|sh|inc|swp|dist)|~)$ {
    deny all;
  }

  # cache.appcache and data
  location ~* \.(?:manifest|appcache|xml|json)$ {
    expires -1;
  }

  # html document
  location ~* \.(?:html?)$ {
    sub_filter web2018.epfl.ch 127.0.0.1:8080;
    sub_filter https:// http://;
    sub_filter_once off;
    expires -1;
  }

  # Media: images, icons, video, audio, HTC
  location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
    add_header "Access-Control-Allow-Origin" "*";
    expires -1;
    add_header Cache-Control "public";
  }

  # CSS and Javascript
  location ~* \.(?:css|js)$ {
    expires -1;
    add_header Cache-Control "public";
  }

  # Enable Gzip compression.
  gzip on;

  # Enable compression both for HTTP/1.0 and HTTP/1.1.
  gzip_http_version 1.0;

  # Compression level (1-9).
  gzip_comp_level 6;

  # Don't compress anything that's already small and unlikely to shrink
  # much if at all (the default is 20 bytes, which is bad as that usually
  # leads to larger files after gzipping).
  gzip_min_length 1100;

  # Compress data even for clients that are connecting to us via proxies,
  # identified by the "Via" header.
  gzip_proxied any;

  # Compress all output labeled with one of the following MIME-types.
  gzip_types
    application/atom+xml
    application/javascript
    application/json
    application/rss+xml
    application/vnd.ms-fontobject
    application/x-font-ttf
    application/x-web-app-manifest+json
    application/xhtml+xml
    application/xml
    font/opentype
    image/svg+xml
    image/x-icon
    text/css
    text/plain
    text/x-component;
  # text/html is always compressed by HttpGzipModule
}
